// Wnd1S.idl: источник IDL для Wnd1S
//

// Этот файл будет обработан средством MIDL для
// создания библиотеки типов (Wnd1S.tlb) и кода маршалирования.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(AB634001-F13D-11d0-A459-004095E1DAEA),
	pointer_default(unique)
]
interface IInitDone : IUnknown{
	[helpstring("method Init")] HRESULT Init([in] IDispatch* pConnection);
	[helpstring("method Done")] HRESULT Done(void);
	[helpstring("method GetInfo")] HRESULT GetInfo([in,out] SAFEARRAY(VARIANT)* pInfo);
};

[
	object,
	uuid(AB634003-F13D-11d0-A459-004095E1DAEA),
	pointer_default(unique)
]
interface ILanguageExtender : IUnknown{

	[helpstring("method RegisterExtensionAs")] HRESULT RegisterExtensionAs([in,out] BSTR* bstrExtensionName);

	[helpstring("method GetNProps")] HRESULT GetNProps([in,out]long *plProps);
	[helpstring("method FindProp")] HRESULT FindProp([in]BSTR bstrPropName, [in,out]long *plPropNum);
	[helpstring("method GetPropName")] HRESULT GetPropName([in]long lPropNum,[in]long lPropAlias,[in,out]BSTR *pbstrPropName);
	[helpstring("method GetPropVal")] HRESULT GetPropVal([in]long lPropNum,[in,out]VARIANT *pvarPropVal);
	[helpstring("method SetPropVal")] HRESULT SetPropVal([in]long lPropNum,[in]VARIANT *varPropVal);
	[helpstring("method IsPropReadable")] HRESULT IsPropReadable([in]long lPropNum,[in,out]BOOL *pboolPropRead);
	[helpstring("method IsPropWritable")] HRESULT IsPropWritable([in]long lPropNum,[in,out]BOOL *pboolPropWrite);

	[helpstring("method GetNMethods")] HRESULT GetNMethods([in,out]long *plMethods);
	[helpstring("method FindMethod")] HRESULT FindMethod(BSTR bstrMethodName,[in,out]long *plMethodNum);
	[helpstring("method GetMethodName")] HRESULT GetMethodName([in]long lMethodNum,[in]long lMethodAlias,[in,out]BSTR *pbstrMethodName);
	[helpstring("method GetNParams")] HRESULT GetNParams([in]long lMethodNum,[in,out]long *plParams);
	
	[helpstring("method GetParamDefValue")] HRESULT GetParamDefValue([in]long lMethodNum,[in]long lParamNum,[in,out]VARIANT *pvarParamDefValue);
	[helpstring("method HasRetVal")] HRESULT HasRetVal([in]long lMethodNum,[in,out]BOOL *pboolRetValue);
	[helpstring("method CallAsProc")] HRESULT CallAsProc([in]long lMethodNum,[in] SAFEARRAY (VARIANT) *paParams);
	[helpstring("method CallAsFunc")] HRESULT CallAsFunc([in]long lMethodNum,[in,out] VARIANT *pvarRetValue,[in] SAFEARRAY (VARIANT) *paParams);

};

[
	object,
	uuid(AB634002-F13D-11d0-A459-004095E1DAEA),
	helpstring("IPropertyProfile Interface"),
	pointer_default(unique)
]
interface IPropertyProfile : IPropertyBag
{
	[helpstring("method RegisterProfileAs")] HRESULT RegisterProfileAs(BSTR bstrProfileName);
};

[
	object,
	uuid(ab634004-f13d-11d0-a459-004095e1daea),
	helpstring("IAsyncEvent Interface"),
	pointer_default(unique)
]
interface IAsyncEvent : IUnknown
{
	[helpstring("method SetEventBufferDepth")] HRESULT SetEventBufferDepth(long lDepth);
	[helpstring("method GetEventBufferDepth")] HRESULT GetEventBufferDepth(long *plDepth);
	[helpstring("method ExternalEvent")] HRESULT ExternalEvent(BSTR bstrSource, BSTR bstrMessage, BSTR bstrData);
	[helpstring("method CleanBuffer")] HRESULT CleanBuffer();
};

[
	object,
	uuid(ab634005-f13d-11d0-a459-004095e1daea),
	helpstring("IStatusLine Interface"),
	pointer_default(unique)
]
interface IStatusLine : IUnknown
{
	[helpstring("method SetStatusLine")] HRESULT SetStatusLine(BSTR bstrStatusLine);
	[helpstring("method ResetStatusLine")] HRESULT ResetStatusLine();
};

/* Special custom interface that provides data exchange 
between IPropertyPage and component object
*/
[
	object,
	uuid(52512A61-2A9D-11d1-A4D6-004095E1DAEA),
	helpstring("IPropertyLink Interface"),
	pointer_default(unique)
]
interface IPropertyLink : IUnknown
{
	[helpstring("method get_Enabled(BOOL *boolEnabled)")] HRESULT get_Enabled(BOOL *boolEnabled);
	[helpstring("method put_Enabled(BOOL boolEnabled)")] HRESULT put_Enabled(BOOL boolEnabled);
};

[
	uuid(E93D0C9B-448F-4000-B0D8-1FBDFF4951A2),
	version(1.0),
]
library Wnd1SLib
{
	importlib("stdole2.tlb");
	[
		uuid(9FD518F1-A5DB-4F36-89C0-CED4494FC5DD)		
	]
	coclass Juncter
	{
		[default] interface IInitDone;
		interface ILanguageExtender;
		interface IPropertyPage;
	};
	
};

